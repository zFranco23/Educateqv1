{"version":3,"sources":["views/notas/Ex. bimestrales/bimestrales.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":["styles","makeStyles","container","marginTop","marginBottom","Bimestrales","classes","useState","alumnos","setAlumnos","cursos","setCursos","examenes","setExamenes","setExaCurso","cursoSelected","setCursoSelected","dataExamenes","setDataExamenes","neutral","setNeutral","aprobados","setAprobados","desaprobados","setDesaprobados","urlCursos","urlExamenes","userId","useContext","BackContext","makeData","arrayData","newData","map","i","orden","nombre","apellido","nota","cantNeutral","filter","examen","cantAprobados","cantDesaprobados","getData","a","fetch","response","json","tutor","arrayVacio","Array","length","includes","push","newCourses","course","value","label","id","_id","newStudents","student","find","curso","exaForCourse","exam","console","log","el","index","jsonData","alumno","useEffect","getExaCurso","displayDesaprobados","style","margin","color","fontWeight","marginLeft","variant","displayAprobados","displayNeutral","maxWidth","select","onChange","e","target","SelectProps","native","helperText","option","size","columns","title","field","type","data","actions","icon","tooltip","onClick","event","rowData","alert","window","confirm","options","actionsColumnIndex","localization","header","arrayNombre","c1","c2","c3","c4","c5","forEach","parseFloat","charAt","bar","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","bar_2","barPercentage","categoryPercentage","maintainAspectRatio","responsive","pie","className","item","xs","sm","md","textAlign","height","graphic","displayCharts","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"mappings":"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","file":"static/js/15.d53f06cd.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {makeStyles, Alert, Grid,Typography,CircularProgress, TextField} from '@material-ui/core';\r\nimport {CChart} from '@coreui/react-chartjs'\r\nimport BackContext from 'src/Provider/BackContext';\r\nimport { CAlert } from '@coreui/react';\r\n\r\n\r\nconst styles=makeStyles({\r\n    container:{\r\n        marginTop: \"1rem\",\r\n        marginBottom:\"1rem\"\r\n    }\r\n    \r\n})\r\nfunction Bimestrales() {\r\n    const classes=styles();\r\n    const [alumnos,setAlumnos]=useState([]);\r\n    const [cursos,setCursos]=useState([]);\r\n    const [examenes,setExamenes]=useState([]);\r\n    const [exaCurso,setExaCurso]=useState([]);\r\n    const [cursoSelected,setCursoSelected]=useState(\"\");\r\n    const [dataExamenes,setDataExamenes]=useState([]);\r\n\r\n    /*Graficas*/\r\n    const [neutral, setNeutral] = useState([]);\r\n    const [aprobados, setAprobados] = useState([]);\r\n    const [desaprobados, setDesaprobados] = useState([]);\r\n\r\n\r\n    const urlCursos=\"https://api-colegio-g12.herokuapp.com/escuela/buscar-alumnos-del-tutor\";\r\n    const urlExamenes=\"https://api-colegio-g12.herokuapp.com/escuela/ver-examenBimestral\";\r\n\r\n\r\n    const {userId}=useContext(BackContext);\r\n\r\n\r\n\r\n    const handleCursoExamen=(e)=>{\r\n        setCursoSelected(e.target.value);\r\n        const {id} = cursos.find(curso => curso.label==e.target.value);  \r\n        const exaForCourse=examenes.filter(exam => exam.curso==id);\r\n        setExaCurso(exaForCourse);\r\n        const arrayData=exaForCourse.map((el,index)=>{\r\n            const jsonData=alumnos.find(alumno=>alumno.id == el.alumno);\r\n            jsonData.nota=el.nota;\r\n            return jsonData;\r\n        });\r\n        makeData(arrayData);  \r\n    }\r\n\r\n    const makeData= (arrayData) =>{\r\n        const newData= arrayData.map(({nombre,apellido,nota},i)=>(\r\n            {\r\n                orden : i+1,\r\n                nombre,\r\n                apellido,\r\n                nota\r\n            }\r\n        ))\r\n        setDataExamenes(newData)\r\n        const cantNeutral=newData.filter(examen=>examen.nota==11);\r\n        const cantAprobados =newData.filter(examen=>examen.nota>11);\r\n        const cantDesaprobados= newData.filter((examen)=>examen.nota < 11);\r\n\r\n        setNeutral(cantNeutral);\r\n        setAprobados(cantAprobados);\r\n        setDesaprobados(cantDesaprobados);\r\n        \r\n        \r\n    }\r\n\r\n    async function getData (examenes){\r\n        //Cursos\r\n        const response=await fetch(`${urlCursos}/${userId}`);\r\n        const {alumnos,tutor:{cursos}}=await response.json();\r\n        const arrayVacio=new Array();\r\n        const a=new Array();\r\n\r\n        for(let i=0;i<cursos.length;i++){\r\n            if(!arrayVacio.includes(cursos[i].nombre)){\r\n                a.push(cursos[i]);\r\n            }\r\n            arrayVacio.push(cursos[i].nombre);\r\n        }\r\n        const newCourses=a.map((course,i)=>({\r\n            value: course.nombre,\r\n            label: course.nombre,\r\n            id: course._id\r\n        }))\r\n        setCursos(newCourses);\r\n        setCursoSelected(newCourses[0].value)\r\n        const newStudents=alumnos.map((student,i)=>({\r\n            id:student._id,\r\n            nombre:student.nombre,\r\n            apellido:student.apellido\r\n        }))\r\n\r\n        setAlumnos(newStudents);\r\n\r\n        const {id} = newCourses.find(curso => curso.label==newCourses[0].label);\r\n        const exaForCourse=examenes.filter(exam => exam.curso==id);\r\n        console.log(exaForCourse);\r\n        const arrayData=exaForCourse.map((el,index)=>{\r\n            const jsonData=newStudents.find(alumno=>alumno.id == el.alumno);\r\n            jsonData.nota=el.nota;\r\n            return jsonData;\r\n        });\r\n        makeData(arrayData);\r\n    }\r\n\r\n    async function getExaCurso(){     \r\n        const response = await fetch(`${urlExamenes}/${userId}`);\r\n        const {examen}= await response.json();\r\n        setExamenes(examen);\r\n        getData(examen);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getExaCurso();\r\n    },[])\r\n\r\n    const columns=[\r\n        {\r\n            title:'Nro. Orden',\r\n            field:'orden',\r\n            type:\"numeric\"\r\n        },\r\n        {\r\n            title:'Apellidos',\r\n            field:'apellido'\r\n        },\r\n        {\r\n            title:'Nombres',\r\n            field:'nombre'\r\n        },\r\n        {\r\n            title:'Nota',\r\n            field:'nota',\r\n            type:\"numeric\"\r\n        }\r\n    ];\r\n\r\n    /**Graficos */\r\n    \r\n    function displayCharts(){\r\n        let arrayData=Array();\r\n        let arrayNombre=Array();\r\n        let c1=0,c2=0,c3=0,c4=0,c5=0;\r\n        dataExamenes.forEach(({nombre,apellido,nota})=>{\r\n            arrayData.push(parseFloat(nota));\r\n            arrayNombre.push(`${nombre} ${apellido.charAt(0)}.`)\r\n            if(nota>=0 && nota<=3){\r\n                c1++;\r\n            }\r\n            if(nota>=4 && nota<=7){\r\n                c2++;\r\n            }\r\n            if(nota>=8 && nota<=11){\r\n                c3++;\r\n            }\r\n            if(nota>=12 && nota<=15){\r\n                c4++;\r\n            }\r\n            if(nota>=16 && nota<=20){\r\n                c5++;\r\n            }\r\n        })\r\n\r\n        const bar={\r\n            labels: ['0 - 3', '4 - 7', '8 - 11', '12 - 15', '16 - 20'],\r\n            datasets: [\r\n                {\r\n                    label: 'Notas en rango',\r\n                    backgroundColor: '#BAE617',\r\n                    borderColor: '#8EAB22',\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: '#C8C536',\r\n                    hoverBorderColor: '98963C',\r\n                    data: [c1, c2, c3, c4, c5],\r\n                },\r\n            ],\r\n        }\r\n        const bar_2={\r\n            labels: arrayNombre,\r\n            datasets: [\r\n                {\r\n                    label: 'Nota',\r\n                    backgroundColor: 'green',\r\n                    borderColor: 'green',\r\n                    borderWidth: 2,\r\n                    hoverBackgroundColor: '#62D616',\r\n                    hoverBorderColor: '98963C',\r\n                    data: arrayData,\r\n                    barPercentage: 0.5,\r\n                    categoryPercentage: 1\r\n                },\r\n            ],\r\n        }\r\n        const options={\r\n            maintainAspectRatio: false,\r\n            responsive: true\r\n        }\r\n        const pie = {\r\n            labels: [\r\n              'Desaprobados',\r\n              'Aprobados',\r\n              'Neutral',\r\n            ],\r\n            datasets: [\r\n              {\r\n                data: [desaprobados.length,aprobados.length,neutral.length],\r\n                backgroundColor: [\r\n                  '#FC0404',\r\n                  '#36A2EB',\r\n                  '#FFCE56',\r\n                ],\r\n                hoverBackgroundColor: [\r\n                  '#FF6384',\r\n                  '#36A2EB',\r\n                  '#FFCE56',\r\n                ],\r\n              }],\r\n        };\r\n        \r\n            \r\n            return <Grid container className={classes.container}>\r\n            <Grid item xs={12} sm={12} md={12}>\r\n                <Typography style={{textAlign:\"center\",marginBottom:\"0.5rem\"}} variant=\"h6\" > Grafico de alumno por nota </Typography>\r\n            <CChart  style={{height:\"300px\"}}type=\"bar\" datasets={bar_2.datasets} labels={bar_2.labels} options={options}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} className={classes.graphic} >\r\n                <Typography style={{textAlign:\"center\",marginBottom:\"0.5rem\"}} variant=\"h6\" > Gráfico de Barras</Typography>\r\n                <CChart  style={{height:\"250px\"}} type=\"bar\" datasets={bar.datasets} labels={bar.labels} options={options}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6}className={classes.graphic} >\r\n                <Typography style={{textAlign:\"center\",marginBottom:\"0.5rem\"}} variant=\"h6\" >Resumen del salon</Typography>\r\n                <CChart type=\"pie\" datasets={pie.datasets} labels={pie.labels} />\r\n            </Grid>\r\n            </Grid>\r\n    }\r\n    \r\n    const displayDesaprobados=(\r\n        <div style={{margin:\"1rem\"}}>\r\n            <CAlert color=\"danger\">\r\n            <span style={{fontWeight:\"bold\"}}>¡Atención!</span> Alumnos desaprobados :\r\n            </CAlert>\r\n        {\r\n            <div style={{marginLeft:\"2rem\"}} >\r\n                {desaprobados.map((el,index)=>(\r\n            <Typography key={index} variant=\"h6\">{`${el.nombre} ${el.apellido} : ${el.nota}`}</Typography>\r\n            ))\r\n            }\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n    const displayAprobados=(\r\n        <div style={{margin:\"1rem\"}}>\r\n            <CAlert color=\"primary\">\r\n                Alumnos que aprobaron : \r\n            </CAlert>\r\n        {<div style={{marginLeft:\"2rem\"}}>\r\n            {aprobados.map((el,index)=>(\r\n            <Typography key={index} variant=\"h6\">{`${el.nombre} ${el.apellido} : ${el.nota}`}</Typography>\r\n        ))}\r\n        </div> }\r\n        </div>\r\n    )\r\n    const displayNeutral=(\r\n        <div style={{margin:\"1rem\"}}>\r\n            <CAlert color=\"warning\">\r\n                Alumnos con nota regular : \r\n            </CAlert>\r\n        {\r\n            <div style={{marginLeft:\"2rem\"}}>\r\n                {neutral.map((el,index)=>(\r\n            <Typography key={index} variant=\"h6\">{`${el.nombre} ${el.apellido} : ${el.nota}`}</Typography>\r\n            ))}\r\n            </div>\r\n        \r\n        }\r\n        </div>\r\n    )\r\n    return (\r\n        <div style={{ maxWidth: \"100%\" }}>\r\n            {cursos?.length ? (<TextField\r\n                id=\"outlined-select-currency-native\"\r\n                select\r\n                label=\"Curso\"\r\n                value={cursoSelected}\r\n                onChange={handleCursoExamen}\r\n                SelectProps={{\r\n                    native: true,\r\n                }}\r\n                helperText=\"Seleccione un Curso\"\r\n                variant=\"outlined\"\r\n                style={{marginBottom:\"1rem\"}}\r\n            >\r\n                { cursos.map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                    </option>\r\n                ))}\r\n            </TextField>) :<CircularProgress size={50}/> }\r\n            <MaterialTable\r\n                columns={columns}\r\n                data={dataExamenes}\r\n                title=\"Sección A - Exámenes Bimestrales\"\r\n                actions={[\r\n                    {\r\n                        icon:'edit',\r\n                        tooltip: 'Editar Alumno',\r\n                        onClick:(event,rowData)=>alert('Has elegido editar al alumno:'+rowData.nombre)\r\n                    },\r\n                    {\r\n                        icon:'delete',\r\n                        tooltip: 'Eliminar Alumno',\r\n                        onClick:(event,rowData)=>window.confirm('¿Estás seguro de eliminar al alumno: '+rowData.nombre+'?')\r\n                    }\r\n\r\n                ]}\r\n                options={{\r\n                    actionsColumnIndex:-1\r\n                }}\r\n                localization={{\r\n                    header:{\r\n                        actions:'Acciones'\r\n                    }\r\n                }}\r\n                /> \r\n          \r\n            {dataExamenes?.length && displayCharts()}\r\n\r\n            {desaprobados?.length>0 && displayDesaprobados}\r\n            {aprobados?.length>0 && displayAprobados}\r\n            {neutral?.length>0 && displayNeutral}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bimestrales","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"sourceRoot":""}