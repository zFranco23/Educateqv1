{"version":3,"sources":["views/notas/Ex. semanales/semanales.js","../node_modules/@material-ui/icons/Close.js","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":["styles_2","makeStyles","container","marginTop","marginBottom","Semanales","userId","useContext","BackContext","classes","useState","idCurso","setIdCurso","semanaSelected","setSemanaSelected","numSem","setNumSem","alumnos","setAlumnos","cursos","setCursos","examenes","setExamenes","setExaCurso","cursoSelected","setCursoSelected","dataExamenes","setDataExamenes","setPromNotas","alumnMax","setAlumnMax","alumnMin","setAlumnMin","arrayNotasMax","setArrayNotasMax","arrayNotasMin","setArrayNotasMin","neutral","setNeutral","aprobados","setAprobados","desaprobados","setDesaprobados","visible","setVisible","urlCursos","urlExamenes","makeData","arrayData","newData","map","i","orden","nombre","apellido","nota","cantNeutral","filter","examen","cantAprobados","cantDesaprobados","getData","a","fetch","response","json","tutor","arrayVacio","Array","length","includes","push","newCourses","course","value","label","id","_id","newStudents","student","find","curso","exaForCourse","exam","semana","el","index","jsonData","alumno","getStudent","promNotas","arrayArrayNotas","forEach","suma","b","arraySemana","jsonNota","indexBueno","indexOf","Math","max","apply","indexMalo","min","useEffect","getExaCurso","displayDesaprobados","style","margin","color","fontWeight","marginLeft","variant","displayAprobados","displayNeutral","maxWidth","select","onChange","e","sem","target","SelectProps","native","helperText","option","size","substring","filterSem","columns","title","field","type","data","actions","icon","tooltip","onClick","event","rowData","alert","window","confirm","options","actionsColumnIndex","localization","header","display","flexWrap","justifyContent","alignItems","datasets","backgroundColor","labels","arrayNombre","c1","c2","c3","c4","c5","parseFloat","charAt","bar","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","bar_2","barPercentage","categoryPercentage","maintainAspectRatio","responsive","pie","className","item","xs","sm","md","textAlign","height","graphic","displayCharts","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","enumerable","get","_utils","createSvgIcon","module","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","err","undefined"],"mappings":"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","file":"static/js/13.f1ea76ea.chunk.js","sourcesContent":["import React, { useState,useEffect,useContext } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {CChart, CChartLine} from '@coreui/react-chartjs'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Grid, CircularProgress , makeStyles,TextField, MenuItem} from '@material-ui/core';\r\nimport BackContext from 'src/Provider/BackContext';\r\nimport { CAlert, CButton, CCard,CCardBody,CCardHeader } from '@coreui/react';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\nconst styles_2=makeStyles({\r\n    container:{\r\n        marginTop: \"1rem\",\r\n        marginBottom:\"1rem\"\r\n    }\r\n    \r\n})\r\n\r\n\r\nfunction Semanales() {\r\n    \r\n    const {userId}=useContext(BackContext);\r\n\r\n    const classes=styles_2();\r\n\r\n    const [idCurso,setIdCurso]=useState(\"\");\r\n    const [semanaSelected,setSemanaSelected]=useState(\"\");\r\n    const [numSem,setNumSem]=useState(\"\");\r\n    const [alumnos,setAlumnos]=useState([]);\r\n\r\n    //Cursos traidos de la bd\r\n    const [cursos,setCursos]=useState([]);\r\n    //Todos los examenes que existen del profesor\r\n    const [examenes,setExamenes]=useState([]);\r\n    //Examen filtrado del curso \r\n    const [exaCurso,setExaCurso]=useState([]);\r\n    const [cursoSelected,setCursoSelected]=useState(\"\");\r\n    const [dataExamenes,setDataExamenes]=useState([]);\r\n    const [promNotas,setPromNotas]=useState([]);\r\n    const [alumnMax,setAlumnMax]=useState(null);\r\n    const [alumnMin,setAlumnMin]=useState({});\r\n    const [arrayNotasMax,setArrayNotasMax]=useState([]);\r\n    const [arrayNotasMin,setArrayNotasMin]=useState([]);\r\n    /*Graficas*/\r\n    const [neutral, setNeutral] = useState([]);\r\n    const [aprobados, setAprobados] = useState([]);\r\n    const [desaprobados, setDesaprobados] = useState([]);\r\n\r\n    const [visible,setVisible]=useState(false);\r\n    const urlCursos=\"https://api-colegio-g12.herokuapp.com/escuela/buscar-alumnos-del-tutor\";\r\n    const urlExamenes=\"https://api-colegio-g12.herokuapp.com/escuela/ver-examenSemanal\";\r\n\r\n\r\n    \r\n\r\n    const semana=[\r\n        { label: \"Semana 1\", value : \"Semana 1\"},\r\n        { label: \"Semana 2\", value : \"Semana 2\"},\r\n        { label: \"Semana 3\", value : \"Semana 3\"},\r\n        { label: \"Semana 5\", value : \"Semana 5\"},\r\n        { label: \"Semana 6\", value : \"Semana 6\"},\r\n        { label: \"Semana 7\", value : \"Semana 7\"},\r\n    ]\r\n    function setearRangos(){\r\n        setPromNotas([]);\r\n        setAlumnMax({});\r\n        setAlumnMin({});\r\n    }\r\n\r\n    const handleChange=(e)=>{\r\n        \r\n        const sem=e.target.value;\r\n        setSemanaSelected(sem);\r\n        const numSem=sem.substring(sem.length-1,sem.length)\r\n        setNumSem(numSem);\r\n\r\n        //Filtrar de nuevo para el cambio de semana :\r\n        const filterSem= examenes.filter(el => el.curso==idCurso && el.semana==numSem);\r\n        setExaCurso(filterSem);\r\n        //setExaCurso(filterSem);\r\n         const arrayData=filterSem.map((el,index)=>{\r\n            const jsonData=alumnos.find(alumno=>alumno.id == el.alumno);\r\n            jsonData.nota=el.nota;\r\n            return jsonData;\r\n        });\r\n        makeData(arrayData);\r\n        \r\n    }\r\n\r\n    const handleCursoExamen=(e)=>{\r\n        setearRangos();\r\n        const sem=e.target.value;\r\n        setCursoSelected(sem);\r\n        const {id} = cursos.find(curso => curso.label==e.target.value);  \r\n        setIdCurso(id);\r\n        const exaForCourse=examenes.filter(exam => exam.curso==id && exam.semana==numSem);\r\n        setExaCurso(exaForCourse);\r\n\r\n        const arrayData=exaForCourse.map((el,index)=>{\r\n            const jsonData=alumnos.find(alumno=>alumno.id == el.alumno);\r\n            jsonData.nota=el.nota;\r\n            return jsonData;\r\n        });\r\n        makeData(arrayData); \r\n        getStudent(id); \r\n    }\r\n\r\n    const makeData= (arrayData) =>{\r\n        const newData= arrayData.map(({nombre,apellido,nota},i)=>(\r\n            {\r\n                orden : i+1,\r\n                nombre,\r\n                apellido,\r\n                nota\r\n            }\r\n        ))\r\n        setDataExamenes(newData);\r\n\r\n        const cantNeutral=newData.filter(examen=>examen.nota==11);\r\n        const cantAprobados =newData.filter(examen=>examen.nota>11);\r\n        const cantDesaprobados= newData.filter((examen)=>examen.nota < 11);\r\n\r\n        setNeutral(cantNeutral);\r\n        setAprobados(cantAprobados);\r\n        setDesaprobados(cantDesaprobados);\r\n    }\r\n    async function getData (examenes){\r\n        \r\n        //Cursos\r\n        const response=await fetch(`${urlCursos}/${userId}`);\r\n        const {alumnos,tutor:{cursos}}=await response.json();\r\n\r\n        const arrayVacio=new Array();\r\n        const a=new Array();\r\n\r\n        for(let i=0;i<cursos.length;i++){\r\n            if(!arrayVacio.includes(cursos[i].nombre)){\r\n                a.push(cursos[i]);\r\n            }\r\n            arrayVacio.push(cursos[i].nombre);\r\n        }\r\n        const newCourses=a.map((course,i)=>({\r\n            value: course.nombre,\r\n            label: course.nombre,\r\n            id: course._id\r\n          }))\r\n          setCursos(newCourses);\r\n          setCursoSelected(newCourses[0].value);\r\n        \r\n          const newStudents=alumnos.map((student,i)=>({\r\n            id:student._id,\r\n            nombre:student.nombre,\r\n            apellido:student.apellido\r\n          }))\r\n\r\n            setAlumnos(newStudents);\r\n\r\n          //Asignar el curso para mostrarse por primera vez\r\n\r\n        const {id} = newCourses.find(curso => curso.label==newCourses[0].label);\r\n        setIdCurso(id);\r\n        //console.log(examenes);\r\n        const exaForCourse=examenes.filter(exam => exam.curso==id && exam.semana==\"1\") ;\r\n        //console.log(exaForCourse);\r\n        setExaCurso(exaForCourse);\r\n\r\n        const arrayData=exaForCourse.map((el,index)=>{\r\n            const jsonData=newStudents.find(alumno=>alumno.id == el.alumno);\r\n            jsonData.nota=el.nota;\r\n            return jsonData;\r\n        });\r\n        makeData(arrayData);   \r\n    }\r\n\r\n    async function getExaCurso(){   \r\n        setSemanaSelected(\"Semana 1\");\r\n        setNumSem(\"1\");\r\n        const response = await fetch(`${urlExamenes}/${userId}`);\r\n        const {examen}= await response.json();\r\n        setExamenes(examen);\r\n        getData(examen);\r\n    }\r\n    useEffect(()=>{\r\n        getExaCurso();\r\n        \r\n    },[])\r\n\r\n    const columns=[\r\n        {\r\n            title:'Nro. Orden',\r\n            field:'orden',\r\n            type:\"numeric\"\r\n        },\r\n        {\r\n            title:'Apellidos',\r\n            field:'apellido'\r\n        },\r\n        {\r\n            title:'Nombres',\r\n            field:'nombre'\r\n        },\r\n        {\r\n            title:'Nota',\r\n            field:'nota',\r\n            type:\"numeric\"\r\n        }\r\n    ];\r\n    //Hallar el mas bajito\r\n\r\n    function getStudent(id){\r\n        setVisible(true);\r\n        let arrayData=new Array();\r\n        let promNotas=new Array();\r\n        let arrayArrayNotas=new Array();\r\n        const arraySemanas=[\"1\",\"2\",\"3\",\"5\",\"6\",\"7\"];\r\n        arraySemanas.forEach((semana)=>{\r\n            const a=examenes.filter(exam => exam.curso==id && exam.semana==semana);\r\n            arrayData.push(a)\r\n            //POS 0 ->SEMANA 1()\r\n            //POS 1-> SEMENA 2\r\n        })\r\n        //Para cada alumno\r\n        if(alumnos.length>0 && examenes.length>0){\r\n            let suma;\r\n            let b;\r\n            alumnos.forEach(({id})=>{\r\n                //Recorrer ahora el array de examenes en cada semana\r\n                suma=0;\r\n                b=new Array();\r\n                //6 veces\r\n                arrayData.forEach((arraySemana)=>{\r\n                    //Accedemos a cada los examenes en el cual solo aparecerá 1 vez\r\n                    const jsonNota=arraySemana.find(examen => examen.alumno == id );\r\n                    suma+=jsonNota.nota;\r\n                    b.push(jsonNota.nota);\r\n                    //console.log(jsonNota);\r\n                })\r\n                arrayArrayNotas.push(b);\r\n                promNotas.push(suma/6);\r\n            })\r\n            const indexBueno=promNotas.indexOf((Math.max.apply(null,promNotas)));\r\n            const indexMalo=promNotas.indexOf((Math.min.apply(null,promNotas)));\r\n            setAlumnMax(alumnos[indexBueno]);\r\n            setAlumnMin(alumnos[indexMalo]);\r\n            setArrayNotasMax(arrayArrayNotas[indexBueno]);\r\n            setArrayNotasMin(arrayArrayNotas[indexMalo]);\r\n            setPromNotas(promNotas);\r\n        }\r\n        \r\n    }\r\n    /**GRAFICO */\r\n    function displayCharts(){\r\n        let arrayData=Array();\r\n        let arrayNombre=Array();\r\n        let c1=0,c2=0,c3=0,c4=0,c5=0;\r\n        dataExamenes.forEach(({nombre,apellido,nota})=>{\r\n            arrayData.push(parseFloat(nota));\r\n            arrayNombre.push(`${nombre} ${apellido.charAt(0)}.`)\r\n            if(nota>=0 && nota<=3){\r\n                c1++;\r\n            }\r\n            if(nota>=4 && nota<=7){\r\n                c2++;\r\n            }\r\n            if(nota>=8 && nota<=11){\r\n                c3++;\r\n            }\r\n            if(nota>=12 && nota<=15){\r\n                c4++;\r\n            }\r\n            if(nota>=16 && nota<=20){\r\n                c5++;\r\n            }\r\n        })\r\n        const bar={\r\n            labels: ['0 - 3', '4 - 7', '8 - 11', '12 - 15', '16 - 20'],\r\n            datasets: [\r\n                {\r\n                    label: 'Notas en rango',\r\n                    backgroundColor: '#BAE617',\r\n                    borderColor: '#8EAB22',\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: '#C8C536',\r\n                    hoverBorderColor: '98963C',\r\n                    data: [c1, c2, c3, c4, c5],\r\n                },\r\n            ],\r\n        }\r\n        const bar_2={\r\n            labels: arrayNombre,\r\n            datasets: [\r\n                {\r\n                    label: 'Nota',\r\n                    backgroundColor: 'green',\r\n                    borderColor: 'green',\r\n                    borderWidth: 2,\r\n                    hoverBackgroundColor: '#62D616',\r\n                    hoverBorderColor: '98963C',\r\n                    data: arrayData,\r\n                    barPercentage: 0.5,\r\n                    categoryPercentage: 1\r\n                },\r\n            ],\r\n        }\r\n        const options={\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n        }\r\n        const pie = {\r\n            labels: [\r\n              'Desaprobados',\r\n              'Aprobados',\r\n              'Neutral',\r\n            ],\r\n            datasets: [\r\n              {\r\n                data: [desaprobados.length,aprobados.length,neutral.length],\r\n                backgroundColor: [\r\n                  '#FC0404',\r\n                  '#36A2EB',\r\n                  '#FFCE56',\r\n                ],\r\n                hoverBackgroundColor: [\r\n                  '#FF6384',\r\n                  '#36A2EB',\r\n                  '#FFCE56',\r\n                ],\r\n              }],\r\n        };\r\n        \r\n            \r\n            return (<Grid container className={classes.container}>\r\n            <Grid item xs={12} sm={12} md={12}>\r\n                <Typography style={{textAlign:\"center\",marginBottom:\"0.5rem\"}} variant=\"h6\" > Grafico de alumno por nota </Typography>\r\n                <CChart  style={{height:\"300px\"}}type=\"bar\" datasets={bar_2.datasets} labels={bar_2.labels} options={options}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} className={classes.graphic} >\r\n                <Typography style={{textAlign:\"center\",marginBottom:\"0.5rem\"}} variant=\"h6\" > Gráfico de Barras</Typography>\r\n                <CChart  type=\"bar\" datasets={bar.datasets} labels={bar.labels} options={options}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6}className={classes.graphic} >\r\n                <Typography style={{textAlign:\"center\",marginBottom:\"0.5rem\"}} variant=\"h6\" >Resumen del salon</Typography>\r\n                <CChart type=\"pie\" datasets={pie.datasets} labels={pie.labels} />\r\n            </Grid>\r\n            </Grid> )\r\n    }\r\n    const displayDesaprobados=(\r\n        <div style={{margin:\"1rem\"}}>\r\n            <CAlert color=\"danger\">\r\n            <span style={{fontWeight:\"bold\"}}>¡Atención!</span> Alumnos desaprobados :\r\n            </CAlert>\r\n        {\r\n            <div style={{marginLeft:\"2rem\"}} >\r\n                {desaprobados.map((el,index)=>(\r\n            <Typography key={index} variant=\"h6\">{`${el.nombre} ${el.apellido} : ${el.nota}`}</Typography>\r\n            ))\r\n            }\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n    const displayAprobados=(\r\n        <div style={{margin:\"1rem\"}}>\r\n            <CAlert color=\"primary\">\r\n                Alumnos que aprobaron : \r\n            </CAlert>\r\n        {<div style={{marginLeft:\"2rem\"}}>\r\n            {aprobados.map((el,index)=>(\r\n            <Typography key={index} variant=\"h6\">{`${el.nombre} ${el.apellido} : ${el.nota}`}</Typography>\r\n        ))}\r\n        </div> }\r\n        </div>\r\n    )\r\n    const displayNeutral=(\r\n        <div style={{margin:\"1rem\"}}>\r\n            <CAlert color=\"warning\">\r\n                Alumnos con nota regular : \r\n            </CAlert>\r\n        {\r\n            <div style={{marginLeft:\"2rem\"}}>\r\n                {neutral.map((el,index)=>(\r\n            <Typography key={index} variant=\"h6\">{`${el.nombre} ${el.apellido} : ${el.nota}`}</Typography>\r\n            ))}\r\n            </div>\r\n        \r\n        }\r\n        </div>\r\n    )\r\n    \r\n\r\n    return (\r\n        <div style={{ maxWidth: \"100%\" }}>\r\n            {cursos?.length ? (<TextField\r\n                id=\"outlined-select-currency-native\"\r\n                select\r\n                label=\"Curso\"\r\n                value={cursoSelected}\r\n                onChange={handleCursoExamen}\r\n                SelectProps={{\r\n                    native: true,\r\n                }}\r\n                helperText=\"Seleccione un Curso\"\r\n                variant=\"outlined\"\r\n                style={{marginBottom:\"1rem\"}}\r\n            >\r\n                { cursos.map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                    </option>\r\n                ))}\r\n            </TextField>) :<CircularProgress size={50}/> }\r\n             <TextField \r\n                style={{marginLeft:\"1rem\"}}\r\n                id=\"standard-select-currency\"\r\n                select\r\n                label=\"Semana\"\r\n                value={semanaSelected}\r\n                onChange={handleChange}\r\n                SelectProps={{\r\n                    native: true,\r\n                }}\r\n                helperText=\"Seleccione semana\"\r\n                variant=\"outlined\"\r\n            >\r\n                {semana.map((option) => (\r\n                <option key={option.value} value={option.value}>\r\n                {option.label}\r\n                </option>\r\n                ))}\r\n            </TextField> \r\n            \r\n            {\r\n                <MaterialTable\r\n                columns={columns}\r\n                data={dataExamenes}\r\n                title=\"Sección A - Exámenes Semanales\"\r\n                actions={[\r\n                    {\r\n                        icon:'edit',\r\n                        tooltip: 'Editar Alumno',\r\n                        onClick:(event,rowData)=>alert('Has elegido editar al alumno:'+rowData.nombre)\r\n                    },\r\n                    {\r\n                        icon:'delete',\r\n                        tooltip: 'Eliminar Alumno',\r\n                        onClick:(event,rowData)=>window.confirm('¿Estás seguro de eliminar al alumno: '+rowData.nombre+'?')\r\n                    }\r\n\r\n                ]}\r\n                options={{\r\n                    actionsColumnIndex:-1\r\n                }}\r\n                localization={{\r\n                    header:{\r\n                        actions:'Acciones'\r\n                    }\r\n                }}\r\n                />\r\n            }\r\n            <CCard style={{marginTop:\"1rem\"}}>\r\n                <CCardHeader style={{display:\"flex\",flexWrap:\"wrap\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n                    <Typography variant=\"h6\">Cuadro de mérito</Typography>\r\n                    <CButton style={{marginLeft:\"1rem\"}}color=\"info\" variant=\"outline\" onClick={()=>getStudent(idCurso)}>Traer Datos</CButton>\r\n                    {visible && <CloseIcon style={{marginLeft:\"1rem\"}} onClick={()=>setVisible(false)}/>}\r\n                </CCardHeader>\r\n                {(visible && alumnMax && arrayNotasMax) && <CCardBody>\r\n                    <Typography variant=\"h6\" color=\"error\" >Alumno con menor rendimiento : {`${alumnMin.nombre} ${alumnMin.apellido}`}</Typography>\r\n                    <Typography variant=\"h6\">Alumno con mayor rendimiento : {`${alumnMax.nombre} ${alumnMax.apellido}`}</Typography>\r\n                    <CChartLine\r\n                        datasets={[\r\n                        {\r\n                            label: `${alumnMin.nombre}`,\r\n                            backgroundColor: 'rgb(228,102,81,0.9)',\r\n                            data: arrayNotasMin\r\n                        },\r\n                        {\r\n                            label: `${alumnMax.nombre}`,\r\n                            backgroundColor: 'rgb(0,216,255,0.9)',\r\n                            data: arrayNotasMax\r\n                          }\r\n\r\n                        ]}\r\n                        labels=\"meses\"\r\n                    />\r\n                </CCardBody>}\r\n            </CCard>\r\n            \r\n            {dataExamenes?.length && displayCharts()}\r\n\r\n            {desaprobados?.length>0 && displayDesaprobados}\r\n            {aprobados?.length>0 && displayAprobados}\r\n            {neutral?.length>0 && displayNeutral}\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Semanales","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.createSvgIcon;\n  }\n});\n\nvar _utils = require(\"@material-ui/core/utils\");","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"sourceRoot":""}